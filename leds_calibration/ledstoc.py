import re
import prefs

leds = []
with open("leds.txt", "r") as f:
    for line in f:
        match = re.match("^\d+_\d+: (\d+) (\d+)", line)
        leds.append((int(match.group(1)), int(match.group(2))))

leds.extend([(0, 0)]*60)

print(len(leds))

with open("led_pos.h", "w") as f:
    f.write("// AUTOGENERATED\n");
    f.write("typedef struct { float posx; float posy; } led_pos_t;\n")
    f.write("const led_pos_t ledPositions[8][60] = {\n")
    ofirst = True
    for i in range(8):
        if not ofirst:
            f.write(",\n")
        ofirst = False

        f.write("    {\n")

        ifirst = True
        for k in range(60):
            if not ifirst:
                f.write(",\n")
            ifirst = False

            led = leds[i*60 + k]
            led_norm = prefs.do_norm_coords(led)
            f.write("        {{ {}, {} }}".format(led_norm[0], led_norm[1]))

        f.write("\n    }")

    f.write("\n};\n")
